{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/ajax.js","src/tracker.js"],"names":[],"mappings":"CAAA,QAAA,GAAA,EAAA,EAAA,GAAA,QAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,GAAA,GAAA,kBAAA,UAAA,OAAA,KAAA,GAAA,EAAA,MAAA,GAAA,GAAA,EAAA,IAAA,EAAA,MAAA,GAAA,GAAA,EAAA,IAAA,GAAA,GAAA,OAAA,uBAAA,EAAA,IAAA,MAAA,GAAA,KAAA,mBAAA,EAAA,GAAA,GAAA,EAAA,IAAA,WAAA,GAAA,GAAA,GAAA,KAAA,EAAA,QAAA,SAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,OAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,MAAA,GAAA,GAAA,QAAA,IAAA,GAAA,GAAA,kBAAA,UAAA,QAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,GAAA,OAAA,KAAA,GAAA,SAAA,EAAA,gBCAA,YAEA,IAAA,mBAAA,QAAA,CAEA,GAAA,GAAA,oBAEA,GAAA,QAAA,EAAA,OAEA,GAAA,QADA,EAAA,GAAA,EAAA,KACA,EAAA,KAGA,SAAA,EAAA,GACA,EAAA,MAEA,IAAA,UAAA,SACA,EAAA,MACA,EAAA,EAAA,KAGA,EAAA,KAAA,EAAA,MAAA,MACA,EAAA,YAAA,EAAA,aACA,kDAEA,IAAA,EAEA,IAAA,OAAA,eACA,EAAA,GAAA,oBACA,IAAA,OAAA,cACA,IACA,EAAA,GAAA,eAAA,kBAEA,MAAA,GACA,IACA,EAAA,GAAA,eAAA,qBAGA,MAAA,KAIA,GAAA,EAAA,CAIA,EAAA,mBAAA,WACA,IAAA,EAAA,YAAA,EAAA,UACA,EAAA,SAAA,EAAA,EAAA,aAIA,EAAA,KAAA,EAAA,KAAA,EAEA,KAAA,GAAA,KAAA,GAAA,QACA,EAAA,iBAAA,EAAA,EAAA,QAAA,GAGA,GAAA,iBAAA,eAAA,EAAA,YAEA,KACA,EAAA,KAAA,EAAA,MACA,MAAA,IAEA,MAAA,0JC9DA,YAEA,IAAA,GAAA,EAAA,UAEA,EAAA,EAAA,QAAA,SAAA,GACA,KAAA,OAAA,EAAA,OA4CA,IAzCA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,CAIA,EAAA,GAAA,aACA,EAAA,KAEA,IAEA,GACA,EAHA,EAAA,EAAA,QAAA,OACA,EAAA,KAAA,MAIA,IAAA,QAAA,EAAA,CACA,GAAA,gBAAA,GAAA,CAEA,IAAA,EAAA,EAAA,MACA,KAAA,IAAA,OAAA,iCAGA,GAAA,EAAA,MAAA,GAGA,GAAA,IAAA,MAEA,GAAA,kCACA,EAAA,KAAA,UAAA,EAGA,IAAA,GAAA,GACA,SAAA,EACA,YAAA,EACA,KAAA,EACA,KAAA,EACA,IAAA,GAGA,OAAA,KAIA,mBAAA,QAAA,CACA,GAAA,GAAA,OAAA,OAAA,OAAA,UAEA,GAAA,QAAA","file":"metron-client.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nif (typeof window === 'undefined') { // commonjs\n  // bypass browserify w/variable\n  var ajax = './request-commonjs';\n\n  module.exports = require(ajax);\n} else if (global.$ && $.ajax) { // browser with jquery\n  module.exports = $.ajax;\n} else {\n  // Fallback to a minimal ajax implementation.\n  module.exports = function ajaxShim(url, options) {\n    options = options || {};\n\n    if (arguments.length === 1) {\n      options = url || {};\n      url = options.url;\n    }\n\n    options.type = options.type || 'GET';\n    options.contentType = options.contentType ||\n      'application/x-www-form-urlencoded; charset=UTF-8';\n\n    var httpRequest;\n\n    if (window.XMLHttpRequest) {\n      httpRequest = new XMLHttpRequest();\n    } else if (window.ActiveXObject) {\n      try {\n        httpRequest = new ActiveXObject('Msxml2.XMLHTTP');\n      }\n      catch (e) {\n        try {\n          httpRequest = new ActiveXObject('Microsoft.XMLHTTP');\n        }\n        /* jshint -W002 */\n        catch (e) {}\n      }\n    }\n\n    if (!httpRequest) {\n      return;\n    }\n\n    httpRequest.onreadystatechange = function() {\n      if (httpRequest.readyState === 4 && options.complete) {\n        options.complete(httpRequest, httpRequest.statusText);\n      }\n    };\n\n    httpRequest.open(options.type, url);\n\n    for (var key in options.headers) {\n      httpRequest.setRequestHeader(key, options.headers[key]);\n    }\n\n    httpRequest.setRequestHeader('Content-Type', options.contentType);\n\n    try {\n      httpRequest.send(options.data);\n    } catch (e) {}\n\n    return httpRequest;\n\n  };\n\n}\n","'use strict';\n\nvar ajax = require('./ajax');\n\nvar Tracker = module.exports = function(options) {\n  this.domain = options.domain;\n};\n\nTracker.prototype.send = function(payload, callback, options) {\n  if (!payload) {\n    return;\n  }\n\n  callback = callback || function() {};\n  options = options || {};\n\n  var method = options.method || 'POST';\n  var url = this.domain;\n  var contentType;\n  var data;\n\n  if (method === 'GET') {\n    if (typeof payload !== 'string') {\n      // Serialize payload as query parameters.\n      if (!global.$.param) {\n        throw new Error('Using `GET` requires `$.param`');\n      }\n\n      payload = $.param(payload);\n    }\n\n    url += ('?' + payload);\n  } else {\n    contentType = 'application/json; charset=utf-8';\n    data = JSON.stringify(payload);\n  }\n\n  var xhr = ajax({\n    complete: callback,\n    contentType: contentType,\n    data: data,\n    type: method,\n    url: url,\n  });\n\n  return xhr;\n};\n\n// Export to `window`, for browser wo/browserify.\nif (typeof window !== 'undefined') {\n  var Metron = (window.Metron = window.Metron || {});\n\n  Metron.Tracker = Tracker;\n}\n"],"sourceRoot":"/source/"}